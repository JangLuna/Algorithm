/**
 * 문제에 따르면 각 셀은 돌아가면서 1 부터 숫자가 6각형으로 매칭되며
 * 1번집부터 (중앙) 한 레이어에 속한 어떤 방을 가더라도 거리가 같다는 성질을 이용하여
 * 레이어 단위(층 단위) 로 접근하였다.
 * 따라서 층을 나누는 기준이 필요한데 1 -> 7 -> 19 -> 37 -> 61 ... 의 수열이 층을 나누는 기준점이 되어줌을 알 수 있고
 * 해당 기준점 수열은 각 원소의 차이가  6    12    18    24 ... 처럼 6n 씩 누적되어 차이가 난다는 것을 알 수 있다.
 * 이때의 n은 움직일 층 이라고 볼 수 있다.
 */

let dest = require("fs").readFileSync("./test.txt").toString() * 1;

// 시작 위치. 편의상 변수로 설정
let number = 1;

// 벌집 규칙에 따른 숫자 누적 ()
let acc = 0;

// 실제 움직어야하는 방 수
let cnt = 0;

// 도착지 보다 시작점 + 누적이 작으면
while (number + acc < dest) {
  // 움직여야 할 층수 증가
  cnt++;

  //등비수열(층수 * 6) 이 계속 더해지는 형태이므로 누적계산
  acc += cnt * 6;
}

// +1 하는 이유는 예시에서 자기자신을 포함하므로 실제 움직인 층 수 + 1
console.log(cnt + 1);
